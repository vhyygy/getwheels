// <auto-generated />
using GetWheels.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GetWheels.API.Migrations
{
    [DbContext(typeof(GWContextDb))]
    partial class GWContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("GetWheels.Data.Models.Car", b =>
                {
                    b.Property<string>("PlateNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<string>("Model")
                        .HasMaxLength(60);

                    b.Property<Guid>("OwnerId");

                    b.Property<int>("ReleaseYear");

                    b.Property<int>("TripsCount");

                    b.HasKey("PlateNo");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("GetWheels.Data.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Lang");

                    b.Property<double>("Lat");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("GetWheels.Data.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CarPlateNo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<Guid>("LocationFromId");

                    b.Property<Guid>("LocationToId");

                    b.Property<Guid>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("LocationFromId");

                    b.HasIndex("LocationToId");

                    b.HasIndex("TenantId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("GetWheels.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TripsCount");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GetWheels.Data.Models.Car", b =>
                {
                    b.HasOne("GetWheels.Data.Models.User", "User")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GetWheels.Data.Models.Trip", b =>
                {
                    b.HasOne("GetWheels.Data.Models.Location", "LocationFrom")
                        .WithMany()
                        .HasForeignKey("LocationFromId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GetWheels.Data.Models.Location", "LocationTo")
                        .WithMany()
                        .HasForeignKey("LocationToId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GetWheels.Data.Models.User", "Tenant")
                        .WithMany("Trips")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
